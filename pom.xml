<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>in.zamo</groupId>
	<artifactId>site</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>site</name>

	<properties>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<springversion>3.2.9.RELEASE</springversion>
		 <junitversion>4.7</junitversion>  
		 <dojo.version>1.9.3</dojo.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>


		<!--<dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<version>${junitversion}</version> <scope>test</scope> </dependency> -->
			<!-- 
		<dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-aop</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-asm</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-aspects</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-beans</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-context</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-context-support</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
         -->
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-core</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <!-- 
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-expression</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-jdbc</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-jms</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-orm</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-oxm</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-tx</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
         -->
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-web</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-webmvc</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency> 
        <!--  todo not work -->
        <!-- <dependency>
	<groupId>org.webjars</groupId>
	<artifactId>dgrid</artifactId>
	<version>0.3.14</version>
</dependency> -->
        
	    <dependency>
			<groupId>org.dojotoolkit</groupId>
			<artifactId>dojo</artifactId>
			<version>${dojo.version}</version>
			<type>pom</type>
		</dependency>
		
         
        <!-- 
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-test</artifactId>  
            <version>${springversion}</version>  
            <type>jar</type>  
            <scope>compile</scope>  
        </dependency> 
		 -->
		 
		<dependency>  
            <groupId>commons-collections</groupId>  
            <artifactId>commons-collections</artifactId>  
            <version>3.1</version>  
            <scope>compile</scope>  
        </dependency>  
  
<!--         <dependency>   -->
<!--             <groupId>commons-logging</groupId>   -->
<!--             <artifactId>commons-logging</artifactId>   -->
<!--             <version>1.1</version>   -->
<!--             <scope>compile</scope>   -->
<!--         </dependency>  -->
	</dependencies>
	<build>
		<finalName>Chyee</finalName>
		<plugins>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>${project.build.sourceEncoding}</encoding>				
				</configuration>
			</plugin>
			<!-- war package -->
			 <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>true</failOnMissingWebXml>
				</configuration>
			</plugin>
<!--  			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-dependency-plugin</artifactId> -->
<!-- 				<version>2.6</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<phase>validate</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>copy</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<outputDirectory>${endorsed.dir}</outputDirectory> -->
<!-- 							<silent>true</silent> -->
<!-- 							<artifactItems> -->
<!-- 								<artifactItem> -->
<!-- 									<groupId>javax</groupId> -->
<!-- 									<artifactId>javaee-endorsed-api</artifactId> -->
<!-- 									<version>7.0</version> -->
<!-- 									<type>jar</type> -->
<!-- 								</artifactItem> -->
<!-- 							</artifactItems> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
			<!-- 测试插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<!-- 方法级并发 -->
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
					<!-- 就是参数命令行，这一行很关键。测试插件有个小问题，它不依赖项目的字符集设置，它依赖于操作系统。如果你用命令行操作，看中文提示测试结果还好。但在win+eclipse（UTF-8设置）下，那就是乱码了； -->
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<!-- <skip>true</skip> -->
					<!-- <testFailureIgnore>true</testFailureIgnore> -->
				</configuration>
			</plugin>

			<plugin>  
			    <groupId>org.codehaus.cargo</groupId>  
			    <artifactId>cargo-maven2-plugin</artifactId>  
			    <version>1.4.0</version>  
			    <configuration>  
			        <container>  
			            <containerId>tomcat7x</containerId>  
			            <home>D:\myspaces\worktools\apache-tomcat-7.0.37</home>  
			        </container>  
			        <configuration>  
			            <!-- standalone模式部署应用至本地Web容器 -->  
			            <!--   
			            <type>standalone</type>   
			            <home>${project.build.directory}\tomcat7x</home>   
			            -->  
			            <!--  cargo.servlet.port属性修改监听端口 -->  
			            <!--                            
			            <properties>  
			                <cargo.servlet.port>80<cargo.servlet.port>  
			            </properties>  
			            -->            
			            <!-- existing模式部署应用至本地Web容器 -->  
			            <type>existing</type>   
			            <home>C:\apache-tomcat-6.0.35</home>   
			        </configuration>  
			    </configuration>  
			</plugin> 
			<!-- 测试覆盖率报告 --> <!-- mvn cobertura:cobertura 产生测试覆盖率报告 -->
			<plugin>
				<groupId>maven</groupId>
				<artifactId>maven-clover-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- eclipse maven 插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<version>2.2.1</version> <configuration> <descriptors> <descriptor>src/main/assembly/assembly.xml</descriptor> 
				</descriptors> </configuration> <executions> <execution> <id>make-assembly</id> 
				<phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> </plugin> -->
			<!-- 可执行CLI包 -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId> 
				<version>1.4</version> <executions> <execution> <phase>package</phase> <goals> 
				<goal>shade</goal> </goals> <configuration> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> 
				<mainClass>in.zamo.service.Tool</mainClass> </transformer> </transformers> 
				</configuration> </execution> </executions> </plugin> -->
				
				
				<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>wagon-maven-plugin</artifactId>
			<version>1.0-beta-1</version>
			<executions>
				<execution>
					<id>download-dojo</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>download-single</goal>
					</goals>
					<configuration>
						<serverId>dojotoolkit</serverId>
						<url>
							http://download.dojotoolkit.org/release-${dojo.version}
						</url>
						<fromFile>dojo-release-${dojo.version}.tar.gz</fromFile>
						<toDir>${project.build.directory}</toDir>
					</configuration>
				</execution>
			</executions>
		</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<configuration>
							<target>
								<untar compression="gzip"
									src="${project.build.directory}/dojo-release-${dojo.version}.tar.gz"
									dest="${project.build.directory}" />
							</target>
						</configuration>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/dojo.xml</descriptor>
					</descriptors>
					<tarLongFileMode>gnu</tarLongFileMode>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
	<url>http://www.zamo.in</url>
	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<organization>
		<name>Chyee</name>
		<url>http://www.zamo.in</url>
	</organization>
	<developers>
		<developer>
			<id>chyee</id>
			<name>Chyee Qu</name>
			<email>chyee.qu@outlook.com</email>
			<url>http://www.zamo.in</url>
			<organization>Chyee</organization>
			<organizationUrl>http://www.zamo.in</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
</project>  